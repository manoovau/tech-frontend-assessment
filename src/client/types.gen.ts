// This file is auto-generated by @hey-api/openapi-ts

export type GetCa6B7066DocsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/ca6b7066/docs';
};

export type GetCa6B7066DocsResponses = {
    /**
     * HTML documentation
     */
    200: string;
};

export type GetCa6B7066DocsResponse = GetCa6B7066DocsResponses[keyof GetCa6B7066DocsResponses];

export type GetDetectionsData = {
    body?: never;
    path?: never;
    query: {
        /**
         * 0-based page index
         */
        page: number;
        /**
         * amount of items. Max 100 detections can be requested
         */
        limit: number;
    };
    url: '/detections';
};

export type GetDetectionsErrors = {
    /**
     * Invalid request
     */
    400: unknown;
    /**
     * Rate limit, remain your calm
     */
    429: unknown;
    /**
     * Internal server error
     */
    500: unknown;
};

export type GetDetectionsResponses = {
    /**
     * List of detections
     */
    200: Array<{
        /**
         * primary id (uuid)
         */
        id?: string;
        /**
         * Internal identifier of a customer company/organization
         */
        eyed?: string;
        /**
         * status of the detection. All detections go through the same stages. A detection will be acknowledged when the security analyst is performing triage. A detection will be resolved after triage is done.
         */
        status?: 'triggered' | 'acknowledged' | 'resolved';
        /**
         * resolution status of the detection. If there was malicious action, the resolution status is TP.
         */
        resolutionStatus?: 'TP' | 'FP';
        /**
         * the security vendor that generated the detection
         */
        service?: 'mcafee' | 'norton_antivirus' | 'defender_for_endpoint' | 'sentinel';
        /**
         * Title of the detection
         */
        title?: string;
        /**
         * Severity of the detection
         */
        severity?: 'low' | 'high';
        /**
         * Timestamp of creation in our detections-service
         */
        createdAt?: string;
        updatedAt?: string;
        /**
         * Timestamp of creation in the vendor (e.g. McAfee)
         */
        triggeredAt?: string;
        /**
         * Timestamp of acknowledgement by security analyst
         */
        acknowledgedAt?: string;
        /**
         * Email of security analyst
         */
        acknowledgedBy?: string;
        /**
         * Timestamp of resolve by security analyst
         */
        resolvedAt?: string;
        /**
         * Email of security analyst
         */
        resolvedBy?: string;
        /**
         * Category of a detection
         */
        categoryRef?: 'malicious_behavior_on_a_system' | 'unusual_login_or_user_activity' | 'execution_with_malicious_intent' | 'unusual_software_activity' | 'unauthorized_data_access' | 'uncategorized';
    }>;
};

export type GetDetectionsResponse = GetDetectionsResponses[keyof GetDetectionsResponses];

export type ClientOptions = {
    baseUrl: 'https://api.heyering.com/' | (string & {});
};